@model OnlineShopping.Models.Signup

@{
    ViewBag.Title = "AddDetail";
    Layout = "~/Views/Home/MainHomePageLayout.cshtml";
}
<link href="~/Content/CSS/createForm.css" rel="stylesheet" />

<script src="~/Scripts/Javascript/FormValidation.js"></script>


<div class="secondnav">
    @Html.ActionLink("sell on snapdeal", "AddSellerDetails")
</div>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container">
        
        <div style="font-size:25px ;">
            <h3>Sign up</h3>
        </div>

        <div class="form">

            <hr />

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="input-box">

                @Html.LabelFor(model => model.firstName, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.firstName, new { htmlAttributes = new { @class = "form-control", id = "firstName", onfocusout = "validateFirstName()" } })
                @Html.ValidationMessageFor(model => model.firstName, "", new { @class = "text-danger" })
                <span id="firstNameError" class="text-danger"></span>

            </div>

            <div class="input-box">
                @Html.LabelFor(model => model.lastName, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.lastName, new { htmlAttributes = new { @class = "form-control", id = "lastName", onfocusout = "validateLastName()" } })
                @Html.ValidationMessageFor(model => model.lastName, "", new { @class = "text-danger" })
                <span id="lastNameError" class="text-danger"></span>

            </div>

            <div class="input-box">

                @Html.LabelFor(model => model.dateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.dateOfBirth, new { htmlAttributes = new { @class = "form-control", id = "dateOfBirth", onfocusout = "validateDateOfBirth()" } })
                @Html.ValidationMessageFor(model => model.dateOfBirth, "", new { @class = "text-danger" })
                <span id="dateOfBirthError" class="text-danger"></span>

            </div>
            <div class="">

                @Html.LabelFor(model => model.gender, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="form-gender">

                    @Html.Label("Male")

                    @Html.RadioButtonFor(model => model.gender, "M", new { @class = "form-check-input" })
                    @Html.Label("Female")

                    @Html.RadioButtonFor(model => model.gender, "F", new { @class = "form-check-input" })
                </div>
            </div>

            <div class="input-box">
                @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", id = "email", onfocusout = "validateEmail()" } })
                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                <span id="emailError" class="text-danger"></span>

            </div>

            <div class="input-box">

                @Html.LabelFor(model => model.phoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.phoneNumber, new { htmlAttributes = new { @class = "form-control", id = "phoneNumber", onfocusout = "validatePhoneNumber()" } })
                @Html.ValidationMessageFor(model => model.phoneNumber, "", new { @class = "text-danger" })
                <span id="phoneNumberError" class="text-danger"></span>
            </div>

            <div class="input-box">
                @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
            </div>
            <div class="input-box">
                @Html.LabelFor(model => model.country, htmlAttributes: new { @class = "control-label col-md-2" })
                <select id="countryDropdown" class="select" style="height: 50px; width: 100%;">
                    <option value="">Select a country</option>
                    <!-- Add country options here -->
                </select>
                @Html.ValidationMessageFor(model => model.country, "", new { @class = "text-danger" })
            </div>

            <div class="inpt-box">
                @Html.LabelFor(model => model.state, htmlAttributes: new { @class = "control-label col-md-2" })
                <select id="stateDropdown" class="select" style="height: 50px; width: 100%;">
                    <option value="">Select a state</option>
                </select>
                @Html.ValidationMessageFor(model => model.state, "", new { @class = "text-danger" })
            </div>
            <div class="input-box">
                @Html.LabelFor(model => model.city, htmlAttributes: new { @class = "control-label col-md-2" })
                <select id="cityDropdown" class="select" style="height: 50px; width: 100%;">
                    <option value="">Select a city</option>
                </select>
                @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger" })
            </div>



            <div class="input-box">
                @Html.LabelFor(model => model.pincode, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.pincode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.pincode, "", new { @class = "text-danger" })
            </div>



            <div class="input-box">
                @Html.LabelFor(model => model.username, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.username, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })
            </div>

            <div class="input-box">
                @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control", id = "password", onkeyup = "validatePassword()" } })
                @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                <span id="passwordError" class="text-danger"></span>
            </div>

            <div class="input-box">
                @Html.LabelFor(model => model.confirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.confirmPassword, new { htmlAttributes = new { @class = "form-control", id = "confirmPassword", onkeyup = "validatePassword()" } })
                @Html.ValidationMessageFor(model => model.confirmPassword, "", new { @class = "text-danger" })
                <span id="confirmPasswordError" class="text-danger"></span>
            </div>

            <div>
                <div>
                    <input type="submit" value="Signup" class="button" />
                </div>
            </div>
        </div>
    </div>
}

@Html.ActionLink("Back to List", "Index")


